/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ValueModifier,
    ValueModifierFromJSON,
    ValueModifierFromJSONTyped,
    ValueModifierToJSON,
} from './';

/**
 * 
 * @export
 * @interface Stat
 */
export interface Stat {
    /**
     * 
     * @type {string}
     * @memberof Stat
     */
    name: StatNameEnum;
    /**
     * 
     * @type {number}
     * @memberof Stat
     */
    value: number;
    /**
     * 
     * @type {number}
     * @memberof Stat
     */
    baseValue: number;
    /**
     * 
     * @type {Array<ValueModifier>}
     * @memberof Stat
     */
    modifiers: Array<ValueModifier>;
}

/**
* @export
* @enum {string}
*/
export enum StatNameEnum {
    MoveSpeed = 'MoveSpeed',
    ArmorClass = 'ArmorClass',
    Strength = 'Strength',
    Dexterity = 'Dexterity',
    Constitution = 'Constitution',
    Wisdom = 'Wisdom',
    Intelligence = 'Intelligence',
    Charisma = 'Charisma',
    Proficiency = 'Proficiency',
    Level = 'Level',
    ChallengeRating = 'ChallengeRating'
}

export function StatFromJSON(json: any): Stat {
    return StatFromJSONTyped(json, false);
}

export function StatFromJSONTyped(json: any, ignoreDiscriminator: boolean): Stat {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': json['name'],
        'value': json['value'],
        'baseValue': json['baseValue'],
        'modifiers': ((json['modifiers'] as Array<any>).map(ValueModifierFromJSON)),
    };
}

export function StatToJSON(value?: Stat | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'value': value.value,
        'baseValue': value.baseValue,
        'modifiers': ((value.modifiers as Array<any>).map(ValueModifierToJSON)),
    };
}



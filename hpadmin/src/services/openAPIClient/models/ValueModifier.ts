/* tslint:disable */
/* eslint-disable */
/**
 * Homebrewer\'s Tools: Core
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    Roll,
    RollFromJSON,
    RollFromJSONTyped,
    RollToJSON,
} from './';

/**
 * 
 * @export
 * @interface ValueModifier
 */
export interface ValueModifier {
    /**
     * 
     * @type {number}
     * @memberof ValueModifier
     */
    modifier: number;
    /**
     * 
     * @type {Roll}
     * @memberof ValueModifier
     */
    roll: Roll;
    /**
     * 
     * @type {string}
     * @memberof ValueModifier
     */
    statReference: string;
    /**
     * 
     * @type {number}
     * @memberof ValueModifier
     */
    statReferenceMultiplier: number;
    /**
     * 
     * @type {string}
     * @memberof ValueModifier
     */
    source: string;
    /**
     * 
     * @type {string}
     * @memberof ValueModifier
     */
    log: string;
}

export function ValueModifierFromJSON(json: any): ValueModifier {
    return ValueModifierFromJSONTyped(json, false);
}

export function ValueModifierFromJSONTyped(json: any, ignoreDiscriminator: boolean): ValueModifier {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'modifier': json['modifier'],
        'roll': RollFromJSON(json['roll']),
        'statReference': json['statReference'],
        'statReferenceMultiplier': json['statReferenceMultiplier'],
        'source': json['source'],
        'log': json['log'],
    };
}

export function ValueModifierToJSON(value?: ValueModifier | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'modifier': value.modifier,
        'roll': RollToJSON(value.roll),
        'statReference': value.statReference,
        'statReferenceMultiplier': value.statReferenceMultiplier,
        'source': value.source,
        'log': value.log,
    };
}



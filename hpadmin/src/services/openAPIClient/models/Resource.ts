/* tslint:disable */
/* eslint-disable */
/**
 * Homebrewer\'s Tools: Core
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ValueModifier,
    ValueModifierFromJSON,
    ValueModifierFromJSONTyped,
    ValueModifierToJSON,
} from './';

/**
 * 
 * @export
 * @interface Resource
 */
export interface Resource {
    /**
     * 
     * @type {string}
     * @memberof Resource
     */
    name: string;
    /**
     * 
     * @type {number}
     * @memberof Resource
     */
    maxValue: number;
    /**
     * 
     * @type {number}
     * @memberof Resource
     */
    currentValue: number;
    /**
     * 
     * @type {number}
     * @memberof Resource
     */
    baseValue: number;
    /**
     * 
     * @type {Array<ValueModifier>}
     * @memberof Resource
     */
    modifiers: Array<ValueModifier>;
}

export function ResourceFromJSON(json: any): Resource {
    return ResourceFromJSONTyped(json, false);
}

export function ResourceFromJSONTyped(json: any, ignoreDiscriminator: boolean): Resource {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': json['name'],
        'maxValue': json['maxValue'],
        'currentValue': json['currentValue'],
        'baseValue': json['baseValue'],
        'modifiers': ((json['modifiers'] as Array<any>).map(ValueModifierFromJSON)),
    };
}

export function ResourceToJSON(value?: Resource | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'maxValue': value.maxValue,
        'currentValue': value.currentValue,
        'baseValue': value.baseValue,
        'modifiers': ((value.modifiers as Array<any>).map(ValueModifierToJSON)),
    };
}


